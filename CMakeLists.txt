cmake_minimum_required(VERSION 3.5)

project(sfm LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set (PSP_VERSION_MAJOR 1.3 CACHE STRING "PSP version")
option(USE_LEMON "USE LEMMON Library" ON)
option(USE_BOOST_OPTION "USE BOOST OPTION Library" ON)
option(USE_CXX11_ABI "USE GLIB CXX11 ABI" ON)

message(${CMAKE_SYSTEM})

if(UNIX AND CMAKE_BUILD_TYPE STREQUAL "Debug")
    add_definitions("-D_DEBUG")
endif()

if(NOT USE_CXX11_ABI)
    add_definitions("-D_GLIBCXX_USE_CXX11_ABI=0")
endif()
if(USE_LEMON)
    find_package(lemon REQUIRED)
    set(USE_LEMON_LIB 1)
else()
    set(USE_LEMON_LIB 0)
endif()
add_executable(main main.cpp)
if(USE_BOOST_OPTION)
    set(USE_BOOST_INCLUDE 1)
    find_package(Boost REQUIRED)
    target_include_directories(main PUBLIC ${Boost_INCLUDE_DIRS})
else()
    set(USE_BOOST_INCLUDE 0)
endif()

if(WIN32)
    set(DYNAMIC_LIB_SUFFIX dll)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")    
    set(DYNAMIC_LIB_SUFFIX dylib)
else()
    set(DYNAMIC_LIB_SUFFIX so)
endif()

if(USE_BOOST_OPTION)
    find_package(Boost REQUIRED program_options)
    if(WIN32)
        target_link_libraries(main debug ${Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG})    
        target_link_libraries(main optimized ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE})
    else()    
        target_link_libraries(main ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE})
    endif()
endif()
if(USE_LEMON)
    target_link_libraries(main ${LEMON_LIBRARY})
endif()
configure_file (
  "${PROJECT_SOURCE_DIR}/core/config.h.in"
  "${PROJECT_BINARY_DIR}/config.h"
  )

include_directories(${PROJECT_SOURCE_DIR})
include_directories(${PROJECT_BINARY_DIR})
if(USE_LEMON)
    include_directories(${LEMON_INCLUDE_DIR})
endif()    



option(ENABLE_TESTING "Enable testing" OFF)
add_subdirectory(set)
add_subdirectory(core)
target_link_libraries(main ic_static)
target_link_libraries(main set_stl)

if(ENABLE_TESTING)
  find_package(GTest REQUIRED)
  include(CTest)
  add_subdirectory(test)
endif()
